@model Aadhar1.Models.adharDetails

<style>
    /* all */
    @@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap");

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
    }

    :root {
        --main-blue: #71b7e6;
        --main-purple: #9b59b6;
        --main-grey: #ccc;
        --sub-grey: #d9d9d9;
    }

    .body {
        display: flex;
        height: fit-content;
        justify-content: center; /*center vertically */
        align-items: center; /* center horizontally */
        background: linear-gradient(135deg, var(--main-blue), var(--main-purple));
        padding: 10px;
    }
    /* container and form */
    .detailcontainer {
        max-width: 700px;
        width: 100%;
        background: #fff;
        padding: 25px 30px;
        border-radius: 5px;
    }

        .detailcontainer .title {
            color:purple;
            font-size: 25px;
            font-weight: 500;
            position: relative;
        }

            .detailcontainer .title::before {
                content: "";
                position: absolute;
                height: 3.5px;
                width: 30px;
                background: linear-gradient(135deg, var(--main-blue), var(--main-purple));
                left: 0;
                bottom: 0;
            }

        .detailcontainer form .user__details {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            margin: 20px 0 12px 0;
        }
    /* inside the form user details */
    form .user__details .input__box {
       /* width: calc(100% / 2 - 20px);*/
        margin-bottom: 15px;
    }

    .user__details .input__box .details {
        font-weight: 500;
        margin-bottom: 5px;
        display: block;
    }

    .user__details .input__box input {
        height: 45px;
        width: 100%;
        outline: none;
        border-radius: 5px;
        border: 1px solid var(--main-grey);
        padding-left: 15px;
        font-size: 16px;
        border-bottom-width: 2px;
        transition: all 0.3s ease;
    }

        .user__details .input__box input:focus,
        .user__details .input__box input:valid {
            border-color: var(--main-purple);
        }

    /* inside the form gender details */

    form .gender__details .gender__title {
        font-size: 20px;
        font-weight: 500;
    }

    form .gender__details .category {
        display: flex;
        width: 80%;
        margin: 15px 0;
        justify-content: space-between;
    }

    .gender__details .category label {
        display: flex;
        align-items: center;
    }

    .gender__details .category .dot {
        height: 18px;
        width: 18px;
        background: var(--sub-grey);
        border-radius: 50%;
        margin: 10px;
        border: 5px solid transparent;
        transition: all 0.3s ease;
    }

    #dot-1:checked ~ .category .one,
    #dot-2:checked ~ .category .two,
    #dot-3:checked ~ .category .three {
        border-color: var(--sub-grey);
        background: var(--main-purple);
    }

    form input[type="radio"] {
        display: none;
    }

    /* submit button */
    form .button {
        height: 45px;
        margin: 45px 0;
    }

        form .button input {
            height: 100%;
            width: 100%;
            outline: none;
            color: #fff;
            border: none;
            font-size: 18px;
            font-weight: 500;
            border-radius: 5px;
            background: linear-gradient(135deg, var(--main-blue), var(--main-purple));
            transition: all 0.3s ease;
        }

            form .button input:hover {
                background: linear-gradient(-135deg, var(--main-blue), var(--main-purple));
            }


    .textarea {
        width: 100%;
        height: 125px;
        resize: none;
    }
    @@media only screen and (max-width: 584px) {
        .detailcontainer {
            max-width: 100%;
        }

        form .user__details .input__box {
            margin-bottom: 15px;
            width: 100%;
        }

        form .gender__details .category {
            width: 100%;
        }

        .detailcontainer form .user__details {
            max-height: 300px;
            overflow-y: scroll;
        }

        .user__details::-webkit-scrollbar {
            width: 0;
        }

        .textarea {
            width: 100%;
            height: 125px;
            resize: none;
        }
    }
    .text-danger, strong {
        color: red;
    }

</style>

@using (Html.BeginForm("adharDetail", "Home", FormMethod.Post, new { @enctype ="multipart/form-data" }))
{
    <div class="body">
        <div class="detailcontainer">
            <div class="title">Enter Aadhar Details</div><br />
            <strong>@TempData["message"] </strong>
           <strong>@ViewBag.ResultErrorMessage</strong>
            <div class="user__details">
                <div class="input__box">
                    <span class="details">Full Name</span>
                    @Html.TextBoxFor(e => e.FullName, null, new { placeholder = "FullName", @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.FullName, null, new { @class = "text-danger " })

                </div>
                <div class="input__box">
                    <span class="details">Date Of Birth</span>
                    @Html.TextBoxFor(e => e.DOF, null, new { placeholder = "Date Of Birth", @class = "form-control", @type = "Date" })
                    @Html.ValidationMessageFor(e => e.DOF, null, new { @class = "text-danger" })
                </div>

                @*<div class="input__box">
                    <span class="details">Email</span>
                    @Html.TextBoxFor(e => e.Email, null, new { placeholder = "Email", @class = "form-control", @type = "Email" })
                    @Html.ValidationMessageFor(e => e.Email, null, new { @class = "text-danger" })
                </div>*@

                <div class="input__box">
                    <span class="details">Street Address</span>
                    @Html.TextBoxFor(e => e.StreetAdd, null, new { placeholder = "Street Address", @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.StreetAdd, null, new { @class = "text-danger" })

                </div>

                <div class="input__box">
                    <span class="details">ZIP or postal code </span>
                    @Html.TextBoxFor(e => e.ZIP, null, new { placeholder = "ZIP or postal code", @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.ZIP, null, new { @class = "text-danger" })

                </div>

                <div class="input__box">
                    <span class="details">City</span>
                    @Html.TextBoxFor(e => e.City, null, new { placeholder = "City", @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.City, null, new { @class = "text-danger" })

                </div>

                <div class="input__box">
                    <span class="details">Phone Number</span>
                    @Html.TextBoxFor(e => e.Mobile, null, new { placeholder = "Phone Number", @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.Mobile, null, new { @class = "text-danger" })

                    @*<input type="tel" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" placeholder="012-345-6789" required>*@
                </div>

                <div class="input__box">
                    <span class="details">Gender</span>
                    @Html.TextBoxFor(e => e.Gender, null, new { placeholder = "Gender", @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.Gender, null, new { @class = "text-danger" })

                </div>
                <div class="input__box">
                    <span class="details">Your Image(size Should Be UpTo 550 KB)</span>
                    @Html.TextBoxFor(e => e.Image, null, new { placeholder = "Image", @class = "form-control", @Type = "File"})
                    @Html.ValidationMessageFor(e => e.Image, null, new { @class = "text-danger" })


                </div>
                @*<div class="input__box">
                <label>Address</label>
                <textarea class="textarea"></textarea>
            </div>*@
            </div>

            <div class="button">
                <input type="submit" value="Submit">
            </div>

        </div>
    </div>



}